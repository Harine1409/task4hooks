{"version":3,"sources":["card.js","CounterComponent.js","App.js","reportWebVitals.js","index.js"],"names":["CardComponent","props","useState","toggle","setToggle","Card","sx","minWidth","CardContent","gutterBottom","heading","variant","component","mb","color","subheading","description","CardActions","toggleFunctionality","onClick","CounterComponent","initialstate","setinitialstate","useEffect","console","log","componentname","className","App","toggleCounterComponent","settoggleCounterComponent","counter","setCounter","componentName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPASe,SAASA,EAAcC,GACrC,IAAD,EAC4BC,oBAAS,GADrC,mBACUC,EADV,KACiBC,EADjB,KAaE,OACE,eAACC,EAAA,EAAD,CAAMC,GAAI,CAAEC,SAAU,KAAtB,UACE,eAACC,EAAA,EAAD,WACE,6BAAYC,cAAY,EAAxB,UAAyB,uBACxBR,EAAMS,WAEP,4BAAYC,QAAQ,KAAKC,UAAU,QAAmB,uBACtD,4BAAYN,GAAI,CAACO,GAAG,KAAMC,MAAM,iBAAhC,SACCb,EAAMc,aACM,uBACb,4BAAYJ,QAAQ,QAApB,SACCV,EAAMe,cACM,0BAEf,cAACC,EAAA,EAAD,UACKhB,EAAMiB,oBAAsB,wBAAQC,QAAS,kBAzBhDlB,EAAMiB,qBAAqBf,QAC3BC,GAAWD,IAwBoB,2BAAsE,mDCb9FiB,MAtBf,SAA0BnB,GAAO,IAAD,EACSC,mBAAS,GADlB,mBACrBmB,EADqB,KACRC,EADQ,KAU5B,OANFC,qBAAU,WACRC,QAAQC,IAAI,oCACZ,IACFF,qBAAU,WACRC,QAAQC,IAAI,oCACZ,CAACJ,IAEG,qCACA,+BAAKpB,EAAMyB,cAAX,iBACA,cAAC1B,EAAD,CAAeU,QAAQ,oBAAoBK,WAAW,kBAAkBC,YAAY,uBACpF,iDAAoBK,KAEpB,wBAAQM,UAAU,MAAMR,QAAS,kBAAIG,EAAgBD,EAAa,IAAlE,uBACA,wBAAQM,UAAU,MAAMR,QAAS,kBAAIG,EAAgBD,EAAa,IAAlE,uBAAwF,uBACzF,wBAAQM,UAAU,MAAOR,QAAS,kBAAIG,EAhBzB,IAgBb,uBCiBQM,MA/Bf,SAAa3B,GAAQ,IAAD,EACuCC,oBAAS,GADhD,mBACX2B,EADW,KACYC,EADZ,OAES5B,mBAAS,GAFlB,mBAEX6B,EAFW,KAEHC,EAFG,KAkBpB,OAdET,qBAAU,WACRC,QAAQC,IAAI,oCACZ,IAaA,sBAAKE,UAAU,MAAf,UAEE,cAAC3B,EAAD,CAAeU,QAAQ,gBAAgBK,WAAW,iBAAiBC,YAAY,iDAC9EE,oBAAqB,SAACf,GAP3B2B,GAOoD3B,MAHlD,IAG6D,uBAE3D,wBAAQgB,QAAS,kBAAIa,EAAWD,EAAQ,IAAxC,4BAAmE,uBAEjEF,EAAyB,cAAC,EAAD,CAAkBI,cAAc,YAAY,iCCrB9DC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.587279f0.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport { typography } from '@mui/system';\r\n\r\nexport default function CardComponent(props) \r\n{\r\n    const[toggle,setToggle]=useState(true);\r\n    const toggleFunctionality=()=>{\r\n        props.toggleFunctionality(!toggle);\r\n        setToggle(!toggle);\r\n    }\r\n    // useEffect(()=>{\r\n    //     return(()=>{\r\n    //         console.log(\"unmounting of card component\")\r\n    //     })\r\n    // })\r\n\r\n    \r\n  return (\r\n    <Card sx={{ minWidth: 275 }}>\r\n      <CardContent>\r\n        <typography gutterBottom><br></br>\r\n        {props.heading}\r\n        </typography>\r\n        <typography variant=\"h5\" component=\"div\"></typography><br></br>\r\n        <typography sx={{mb:1.5}} color=\"text.secondary\">\r\n        {props.subheading}\r\n        </typography><br></br>\r\n        <typography variant=\"body2\">\r\n        {props.description}\r\n        </typography><br></br>\r\n      </CardContent>\r\n      <CardActions>\r\n          {props.toggleFunctionality ? <button onClick={()=>toggleFunctionality() }>mount/unmount</button> : <button>notoggle</button>}\r\n        \r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}","import './App.css';\r\nimport React,{useState,useEffect} from 'react';\r\nimport CardComponent from './card';\r\nfunction CounterComponent(props){\r\n    const [initialstate,setinitialstate]=useState(5);\r\n   const fixedvalue=5;\r\n    \r\n  useEffect(()=>{\r\n    console.log(\"use effect from mounting state\");\r\n  },[])\r\n  useEffect(()=>{\r\n    console.log(\"use effect from updating state\");\r\n  },[initialstate])\r\n    return(\r\n        <>\r\n        <h3>{props.componentname} component </h3>\r\n        <CardComponent heading=\"counter component\" subheading=\"Class Component\" description=\"decription of card\"/>\r\n        <h4>intitial value:{initialstate}</h4>\r\n        \r\n        <button className=\"btn\" onClick={()=>setinitialstate(initialstate+1)}>increment</button>\r\n        <button className=\"btn\" onClick={()=>setinitialstate(initialstate-1)}>decrement</button><br></br>\r\n       <button className=\"btn\"  onClick={()=>setinitialstate(fixedvalue)}>reset</button>\r\n        </>\r\n    )\r\n}\r\nexport default CounterComponent;","import { Card } from '@mui/material';\n\nimport React,{useState,useEffect} from 'react';\nimport './App.css';\nimport CounterComponent from './CounterComponent';\nimport CardComponent from './card.js';\n\nfunction App(props) {\n  const [toggleCounterComponent,settoggleCounterComponent]=useState(true);\n  const [counter,setCounter]=useState(5);\n\n  useEffect(()=>{\n    console.log(\"use effect from mounting state\");\n  },[])\n  // useEffect(()=>{\n  //   console.log(\"use effect from mounting state\");\n  // },[toggleCounterComponent])\n  // useEffect(()=>{\n  //   console.log(\"use effect from mounting state\");\n  // },[counter])\n \nconst toggleComponent=(valuefromchild)=>{\n  settoggleCounterComponent(!valuefromchild);\n}\n\nreturn(\n    <div className=\"App\">\n      \n      <CardComponent heading=\"App Component\" subheading=\"Home Component\" description=\"this is the home component after index.js page\" \n       toggleFunctionality={(toggle)=>toggleComponent(toggle)}/> <br/>\n       \n      <button onClick={()=>setCounter(counter+5)}>update counter</button><br></br>\n      {/* counter value:{counter} */}\n       {toggleCounterComponent ? <CounterComponent componentName=\"Counter\"/>:<></>}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}